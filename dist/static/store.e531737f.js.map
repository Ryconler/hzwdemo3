{"version":3,"file":"store.e531737f.js","sources":["../../src/utils/city.ts","../../src/utils/position.ts","../../src/api/store.ts"],"sourcesContent":["import { findIndex } from 'lodash'\nimport { cookies } from './cookie'\nimport { ajax } from './http'\nimport { COOKIE_KEYS } from '@/constants/storage'\nimport { CityType } from '@/types/city'\n\nenum Municipality {\n  BeiJin = '110000',\n  TianJin = '120000',\n  ShangHai = '310000',\n  ChongQin = '500000'\n}\n\nconst municipalityList = [\n  Municipality.BeiJin,\n  Municipality.ShangHai,\n  Municipality.TianJin,\n  Municipality.ChongQin\n]\n\nexport const defaultCity: CityType = {\n  cityId: '320100',\n  cityName: '南京'\n}\n\nexport function getCityId(cityId: string) {\n  if (findIndex(municipalityList, o => o == cityId) > -1) {\n    return `${Number(cityId) + 100}`\n  }\n  return cityId\n}\n\nexport async function getCityNameByCityId(cityId: string): Promise<string> {\n  return ''\n}\n\n/* 从cookie获取选择城市 */\nexport async function getSelectedCity(): Promise<CityType | null> {\n  return null\n}\n","import loadScript from 'load-script'\nimport { isHzwApp } from './cookie'\nimport { getAppPosition } from './native'\nimport { localStore } from './storage'\nimport { getCityId } from './city'\nimport { setLoading } from './helper'\nimport { STORAGE_KEYS } from '@/constants/storage'\nimport { PositionType } from '@/types/position'\n\nasync function getH5Postition(): Promise<PositionType | null> {\n  function getLoc() {\n    return new Promise((resolve, reject) => {\n      if (window.AMap && window.AMap.Map) {\n        resolve(window.AMap)\n      } else {\n        loadScript(\n          '//webapi.amap.com/maps?v=1.3&key=d8efc3c388ce874cab0c12f9e928ceee&callback=onAMapLoaded',\n          (err: any) => {\n            if (err) {\n              reject(null)\n            } else {\n              window.onAMapLoaded = () => {\n                resolve(window.AMap)\n              }\n            }\n          }\n        )\n      }\n    })\n  }\n  const AMap: any | null = await getLoc()\n  return new Promise((resolve, reject) => {\n    try {\n      if (AMap) {\n        const map = new AMap.Map('iCenter')\n        map.plugin('AMap.Geolocation', () => {\n          const geolocation = new AMap.Geolocation({\n            enableHighAccuracy: true, // 是否使用高精度定位，默认:true\n            timeout: 5000, // 超过5秒后停止定位，默认：无穷大\n            buttonOffset: new AMap.Pixel(10, 20), // 定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\n            zoomToAccuracy: true, // 定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\n            buttonPosition: 'RB'\n          })\n          geolocation.getCurrentPosition()\n          AMap.event.addListener(geolocation, 'complete', (data: any) => {\n            try {\n              console.log('geolocation complete', data)\n              const adcode = data.addressComponent.adcode\n              let cityId = `${adcode.slice(0, 4)}00`\n              const cityName = data.addressComponent.city\n              const lat = data.position.lat\n              const lng = data.position.lng\n              cityId = getCityId(cityId)\n              const obj = {\n                cityId,\n                cityName,\n                adcode,\n                lat,\n                lng\n              }\n\n              resolve(obj)\n            } catch (e) {\n              resolve(null)\n            }\n          }) // 返回定位信息\n          AMap.event.addListener(geolocation, 'error', (error: any) => {\n            console.error('geolocation error', error)\n            reject(error)\n          }) // 返回定位出错信息\n        })\n      } else {\n        resolve(null)\n      }\n    } catch (e) {\n      reject(e)\n    }\n  })\n}\n\nasync function getLocPosition(): Promise<PositionType | null> {\n  let position: PositionType | null\n  if (isHzwApp()) {\n    position = await getAppPosition()\n  } else {\n    position = await getH5Postition()\n  }\n  if (position && position.cityId) {\n    localStore.setItem(STORAGE_KEYS.CITY_LIFE, {\n      ...position,\n      time: new Date().getTime()\n    })\n  }\n  return position\n}\n/**\n *\n * @param hasLoading 是否有loading默认有\n */\nexport async function getPosition(\n  hasLoading = false,\n  cache = 30\n): Promise<PositionType | null> {\n  return null\n}\n","import { StoreDetailType } from './../types/store'\nimport queryString from 'query-string'\nimport urlPrefixes from '@/constants/urlPrefixes'\nimport { ajax } from '@/utils'\nimport { ResultType } from '@/types/http'\n\nconst api = {\n  queryStoreList: `${urlPrefixes.ccardapi}/ccard-api/api/spu/queryKidStore.do`\n}\n\n/* 查询附近有童玩卡的门店 */\nexport async function queryStoreList(\n  cityId: string,\n  lng?: string,\n  lat?: string\n) {\n  const query = queryString.stringify({\n    cityId,\n    lng,\n    lat\n  })\n  const result: ResultType<StoreDetailType[]> = await ajax.get(\n    `${api.queryStoreList}?${query}`\n  )\n  const { data, code } = result\n  if (code == '1') {\n    return data || []\n  } else {\n    throw result\n  }\n}\n"],"names":["municipalityList","defaultCity","getCityId","cityId","findIndex","o","getCityNameByCityId","__async","getSelectedCity","getPosition","hasLoading","cache","api","urlPrefixes","queryStoreList","lng","lat","query","queryString","result","ajax","data","code"],"mappings":"kTAaA,MAAMA,EAAmB,CACvB,SACA,SACA,SACA,QACF,EAEaC,EAAwB,CACnC,OAAQ,SACR,SAAU,cACZ,EAEO,SAASC,EAAUC,EAAgB,CACxC,OAAIC,EAAAA,QAAAA,UAAUJ,EAAkBK,GAAKA,GAAKF,CAAM,EAAI,GAC3C,GAAG,OAAOA,CAAM,EAAI,MAEtBA,CACT,CAEA,SAAsBG,EAAoBH,EAAiC,QAAAI,EAAA,sBAClE,MAAA,EACT,GAGA,SAAsBC,GAA4C,QAAAD,EAAA,sBACzD,OAAA,IACT,GC4DA,SAAsBE,EACpBC,EAAa,GACbC,EAAQ,GACsB,QAAAJ,EAAA,sBACvB,OAAA,IACT,GClGA,MAAMK,EAAM,CACV,eAAgB,GAAGC,EAAY,6CACjC,EAGsB,SAAAC,EACpBX,EACAY,EACAC,EACA,QAAAT,EAAA,sBACM,MAAAU,EAAQC,EAAY,UAAU,CAClC,OAAAf,EACA,IAAAY,EACA,IAAAC,CAAA,CACD,EACKG,EAAwC,MAAMC,EAAK,IACvD,GAAGR,EAAI,kBAAkBK,GAAA,EAErB,CAAE,KAAAI,EAAM,KAAAC,CAAS,EAAAH,EACvB,GAAIG,GAAQ,IACV,OAAOD,GAAQ,CAAA,EAET,MAAAF,CAEV"}